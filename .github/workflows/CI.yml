# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application build and release

on:
  push:
    tags:
      - "*"

  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            artifact_name: research-mnemonic
          - os: windows-latest
            artifact_name: research-mnemonic.exe
          - os: macos-latest
            artifact_name: research-mnemonic

    permissions:
      contents: write
      packages: write 

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.9
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"

      - name: Setup pipenv
        uses: dschep/install-pipenv-action@v1

      - name: Install Dependencies with Pipenv
        run: |
          pipenv install --dev

      - name: Create Package
        run: |
          pipenv run pyinstaller research-mnemonic.spec
      
      - name: Rename packages
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            echo "file_name=dist/research-mnemonic-linux" >> $GITHUB_ENV
            mv dist/${{ matrix.artifact_name }} dist/research-mnemonic-linux
          elif [ "$RUNNER_OS" == "Windows" ]; then
            echo "file_name=dist/research-mnemonic-windows.exe" >> $GITHUB_ENV
            mv dist/${{ matrix.artifact_name }} dist/research-mnemonic-windows.exe
            
          elif [ "$RUNNER_OS" == "macOS" ]; then
            echo "file_name=dist/research-mnemonic-mac" >> $GITHUB_ENV
            mv dist/${{ matrix.artifact_name }} dist/research-mnemonic-mac
          fi
          ls -R
        shell: bash

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ${{ env.file_name }}

