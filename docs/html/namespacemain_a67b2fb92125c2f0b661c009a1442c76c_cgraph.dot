digraph "reconstruct"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="reconstruct",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Take JSON shares generated by create_shares.py and reconstruct the original secret phrase."];
  Node1 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="word_coding.decode\l_words",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$namespaceword__coding.html#ab93622d861e8bd61dab0dc84a7c41296",tooltip="Turns a secret binary number into a seed phrase, using a given word list for the decoding."];
  Node2 -> Node3 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="word_coding.get_dictionary_bits",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$namespaceword__coding.html#a61ad28767efb3623c54625c9e00276f7",tooltip="Gets the number of bits a given wordlist dictionary represents."];
  Node1 -> Node4 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="word_coding.encode\l_words",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$namespaceword__coding.html#a90df4933f53f5874a926f5328b4335ce",tooltip="Turns a seed phrase into a binary string, using a given word list for the encoding."];
  Node4 -> Node3 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node5 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="get_checksum",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$namespacemain.html#a5f75dd7c245a03cdad3489d7fa146526",tooltip="Computes the checksum to be used for a given entropy, as per BIP-39 standards."];
  Node1 -> Node3 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node6 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="shamir.get_polynomial\l_degree",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$namespaceshamir.html#a263d4e85b75242cd1ed3d931c6dc6e9b",tooltip="Gets degree of a string-form polynomial on GF(2)."];
  Node1 -> Node7 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="get_reconstruction_data",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$namespacemain.html#aad711b42c226b0c325e3852d01c08260",tooltip="Gets the public reconstruction data from a JSON file, in the format needed by shamir...."];
  Node1 -> Node8 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="shamir.secret_reconstruction",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$namespaceshamir.html#a563499ba0bed3c0210657a0dbbebbd85",tooltip="Reconstruct secret from the shares, and check for consistency with the encoded digest."];
  Node8 -> Node9 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="shamir.create_digest",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$namespaceshamir.html#a24b895bca5c6f757e74294a3a67cff32",tooltip="Digest function according to SLIP39."];
  Node8 -> Node6 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 -> Node10 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="shamir.lagrange_interpolation",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$namespaceshamir.html#a46b5edd435fe67eb9d2757b7a1d7b9e4",tooltip="Performs Lagrange interpolation on a Galois field GF(2^d), where d is the degree of primitive_poly."];
  Node10 -> Node6 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
}
